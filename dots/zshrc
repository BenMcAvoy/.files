# PATH setup
function addToPath() {
	export PATH="$1:$PATH"
}

# Setup path for the user.
addToPath "$HOME/.cargo/bin"
addToPath "$HOME/.deno/bin"
addToPath "$HOME/.local/share/bin"
addToPath "$HOME/.local/share/bin/idea/bin"
addToPath "$HOME/.local/bin"
addToPath "$HOME/idea-IDE"
addToPath "$HOME/MSM/"
addToPath "$HOME/.bun/bin"

addToPath "/usr/local/go/bin"
addToPath "/opt/riscv/bin"

# Configure emscripten.
export EMSDK_QUIET=1

# Set the default editor.
export EDITOR="nvim"

# Load the shell completions.
autoload -U compinit promptinit
compinit
promptinit

# Gentoo completions (if available).
if command -v emerge &> /dev/null; then
	prompt gentoo
fi

zstyle ':completion::complete:*' use-cache 1

# Antigen plugin manager setup.
if [[ ! -a $HOME/.zsh/antigen.zsh ]]; then
	mkdir -p $HOME/.zsh
	curl -L git.io/antigen > $HOME/.zsh/antigen.zsh
fi

source $HOME/.zsh/antigen.zsh

# Attempt to load fuzzy finding in reverse search.
source /usr/share/fzf/key-bindings.zsh 2&> /dev/null
source /usr/share/doc/fzf/examples/key-bindings.zsh 2&> /dev/null

# Load the OMZ library.
antigen use oh-my-zsh

# Plugins for the prompt.
antigen bundle joshskidmore/zsh-fzf-history-search
antigen bundle zsh-users/zsh-autosuggestions
antigen bundle zsh-users/zsh-syntax-highlighting
antigen bundle wbingli/zsh-wakatime
antigen bundle git

# Load the prompt theme.
antigen theme robbyrussell

# Apply our changes.
antigen apply

# Aliases
alias ls="exa -l"
alias la="exa -la"

# Zoxide setup
eval "$(zoxide init zsh)"

# Setup our SSH keys.
if ! pgrep -x "ssh-agent" > /dev/null; then
	eval "$(ssh-agent -s)" > /dev/null
fi

ssh-add ~/.ssh/id_ed25519 2&> /dev/null

# Check if mise is installed.
if [[ -f ~/.local/bin/mise ]]; then
	eval "$(~/.local/bin/mise activate zsh)"
fi

test 1

[ -f "/home/ben/.ghcup/env" ] && source "/home/ben/.ghcup/env" # ghcup-env

function bright() {
	brightnessctl -d "amdgpu_bl0" set $1%
}

if [ -d "/home/ben/.linuxbrew" ]; then
	eval "$(/home/ben/.linuxbrew/bin/brew shellenv)"
fi

if [ -d "/home/ben/emsdk" ]; then
	source "/home/ben/emsdk/emsdk_env.sh"
fi

. "$HOME/.cargo/env"

function docxify() {
	pandoc -s -o "${1%.*}.docx" "$1"
}

function fix() {
	git add $1 && git commit --amend --no-edit

	printf "Do you want to force push? [y/N] "
	read response

	if [[ $response =~ ^([yY][eE][sS]|[yY])$ ]]; then
		git push --force
	else
		echo "Aborting force push."
	fi
}

function dec() {
	printf "%d\n" "$1"
}

function hex() {
	printf "%X\n" "$1"
}

function bin() {
	printf "%b\n" $(bc <<< "obase=2; $1")
}
